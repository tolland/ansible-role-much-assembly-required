


# do stuff for Ubuntu

  - name: install basic packages for Ubuntu 16.04
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present
    with_items:
      - apache2
      - git
      - php7.0
      - php7.0-mysql
      - libapache2-mod-php7.0
      - mysql-server
      - mysql-client
      - python-mysqldb
      - mongodb-server
      - openjdk-8-jdk-headless 
      - maven
    when: ansible_distribution_version == "16.04"
    become: true


  - name: install basic packages for Ubuntu 16.10
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present
    with_items:
      - apache2
      - git
      - php5
      - php5-mysql
      - mysql-server
      - mysql-client-5.5
      - python-mysqldb
      - mongo-server
      - openjdk-8-jdk-headless
      - maven
    when: ansible_distribution_version == "16.10"
    become: true

  - name: install basic packages for Ubuntu 17.04
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present
    with_items:
      - apache2
      - git
      - php   # is version 7
      - php-mysql
      - mysql-server
      - mysql-client
      - python-mysqldb
      - openjdk-8-jdk-headless
      - maven
      - mongodb-server
    when: ansible_distribution_version == "17.04"
    become: true

  - name: install basic packages for Ubuntu 17.10
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present
    with_items:
      - apache2
      - git
      - php   # is version 7
      - php-mysql
      - mysql-server
      - mysql-client
      - python-mysqldb
      - openjdk-8-jdk-headless
      - maven
      - mongodb-server
    when: ansible_distribution_version == "17.10"
    become: true

# configure apache

  - apache2_module:
      state: present
      name: proxy_wstunnel
    become: true
    notify:
    - restart apache2


  - apache2_module:
      state: present
      name: proxy
    become: true
    notify:
    - restart apache2


  - service:
      name: apache2
      state: started
      enabled: yes
    become: true


  - service:
      name: mongodb
      state: started
      enabled: yes
    become: true

#  - service:
#      name: mysqld
#      state: started
#      enabled: yes
#    become: true



# need to get the Frontend files, as they contain the database.sql file

 # checkout to the cache directory so it is separate from config.php
  - name: install the Much Assembly frontend
    git:
      repo: https://github.com/simon987/Much-Assembly-Required-Frontend.git
      dest: "/var/cache/ansible/Much-Assembly-Required-Frontend"
      update: true
      force: true
    become: true
    register: mar_frontend_git


# mysql should have been already installed and started
  - name: Create a new database with name 'mar'
    mysql_db:
      name: "{{mar_db_database}}"
      state: present
    become: true
#    notify:
#    - import data
    register: mar_create_db

  - mysql_user:
      name: "{{mar_db_username}}"
      password: "{{mar_db_password}}"
      encrypted: no
      host: localhost
      priv: "{{mar_db_database}}.*:ALL"
      state: present

  - name: Import file.sql similar to mysql -u <username> -p <password> < hostname.sql
    mysql_db:
      state: import
      name: "{{mar_db_database}}"
      target: /var/cache/ansible/Much-Assembly-Required-Frontend/database.sql
    become: true
    when: mar_create_db.changed




  # if the repo changes, copy the new files into the repo, merge with config.php
  - command: >
         cp -r /var/cache/ansible/Much-Assembly-Required-Frontend/.
         /var/www/html/{{mar_web_path}}
    when: mar_frontend_git.changed
    become: true
    
  # mar_web_path: mar/ set in ../vars/main.yml, override in playbook
  - template:
      src: templates/config.php.j2
      dest: "/var/www/html/{{mar_web_path}}include/config.php"
      owner: root
      group: root
      mode: 0644
    become: true
    notify:
    - restart apache2

  # copy in conf file enabling websockets ProxyPass
  - template:
      src: templates/websocket_proxy.j2
      dest: /etc/apache2/conf-enabled/websocket_proxy.conf
      owner: root
      group: root
      mode: 0644
    become: true
    when: ansible_distribution == 'Ubuntu'
    notify:
    - restart apache2


# Mysql must be running to start the backend server
#  install backend components
  - name: configure backend
    import_tasks: backend.yml

